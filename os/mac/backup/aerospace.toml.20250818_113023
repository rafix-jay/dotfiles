# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after AeroSpace startup.
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Callback to update Sketchybar when workspace changes
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = [{ monitor.main = 8 }, 12]     # Larger gaps on external monitors
    inner.vertical =   [{ monitor.main = 8 }, 12]     # Larger gaps on external monitors
    outer.left =       [{ monitor.main = 8 }, 16]     # More padding on external monitors
    outer.bottom =     [{ monitor.main = 8 }, 16]     # More padding on external monitors
    outer.top =        [{ monitor.main = 45 }, 45]    # Sketchybar height (37px) + padding (8px)
    outer.right =      [{ monitor.main = 8 }, 16]     # More padding on external monitors

# Workspace assignments for specific apps
[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
run = 'move-node-to-workspace T'  # T for Terminal

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = 'move-node-to-workspace B'  # B for Browser

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = 'move-node-to-workspace C'  # C for Code

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij'
run = 'move-node-to-workspace I'  # I for IntelliJ

[[on-window-detected]]
if.app-id = 'com.anthropic.claude'
run = 'move-node-to-workspace A'  # A for AI Tools

[[on-window-detected]]
if.app-id = 'ai.perplexity.app.macos'
run = 'move-node-to-workspace A'  # A for AI Tools (app version)

# Messaging apps
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace M'  # M for Messaging

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace M'  # M for Messaging

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = 'move-node-to-workspace M'  # M for Messaging

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace M'  # M for Messaging

# Finder and file management
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'move-node-to-workspace F'  # F for Finder

# Notes and documentation
[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace N'  # N for Notes

[[on-window-detected]]
if.app-id = 'com.apple.TextEdit'
run = 'move-node-to-workspace N'  # N for Notes

# Photo editing
[[on-window-detected]]
if.app-id = 'com.adobe.Photoshop'
run = 'move-node-to-workspace P'  # P for Photo editing

[[on-window-detected]]
if.app-id = 'com.adobe.Lightroom'
run = 'move-node-to-workspace P'  # P for Photo editing (Lightroom Classic)

[[on-window-detected]]
if.app-id = 'com.hasselblad.phocus'
run = 'move-node-to-workspace P'  # P for Photo editing (Hasselblad Phocus)

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = 'move-node-to-workspace P'  # P for Photo/Preview

# Video editing
[[on-window-detected]]
if.app-id = 'com.apple.FinalCut'
run = 'move-node-to-workspace V'  # V for Video

[[on-window-detected]]
if.app-id = 'com.adobe.PremierePro'
run = 'move-node-to-workspace V'  # V for Video

# Music applications (moving to M with messaging, or create separate)
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'move-node-to-workspace U'  # U for mUsic (to avoid conflict with Messaging)

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace U'  # U for mUsic

# Documentation apps
[[on-window-detected]]
if.app-id = 'com.apple.documentation'
run = 'move-node-to-workspace D'  # D for Documentation

# Additional browsers
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace B'  # B for Browser

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace B'  # B for Browser

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace B'  # B for Browser

# Note: Web-based AI tools (ChatGPT, Perplexity web) will open in Browser workspace (B)

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # Application shortcuts
    cmd-alt-t = 'exec-and-forget open -a Warp'                    # Terminal (Warp)
    cmd-alt-b = 'exec-and-forget open -a "Brave Browser"'         # Browser (Brave)
    cmd-alt-c = 'exec-and-forget open -a "Visual Studio Code"'    # Code Editor
    cmd-alt-f = 'exec-and-forget open -a Finder'                  # File Manager
    cmd-alt-i = 'exec-and-forget open -a "IntelliJ IDEA"'         # IDE
    cmd-alt-a = 'exec-and-forget open -a Claude'                  # AI Assistant
    cmd-alt-p = 'exec-and-forget sh -c "open -a Perplexity 2>/dev/null || open \"https://www.perplexity.ai\""'  # AI Search (app or web)
    
    # Messaging apps
    cmd-alt-w = 'exec-and-forget open -a WhatsApp'                # WhatsApp
    cmd-alt-m = 'exec-and-forget open -a Messages'                # Messages
    cmd-alt-d = 'exec-and-forget open -a Discord'                 # Discord
    cmd-shift-alt-t = 'exec-and-forget open -a Telegram'          # Telegram (alternative shortcut)
    
    # AI Tools (web-based fallback)
    cmd-alt-g = 'exec-and-forget open "https://chat.openai.com"'  # ChatGPT (web)
    
    # Creative applications
    cmd-shift-alt-l = 'exec-and-forget open -a "Adobe Lightroom Classic"'  # Lightroom Classic
    cmd-shift-alt-s = 'exec-and-forget open -a "Adobe Photoshop 2024"'     # Photoshop
    
    # Sketchybar integration
    alt-shift-0 = 'exec-and-forget /Users/rafix/.config/sketchybar/plugins/update_workspaces.sh'  # Refresh workspace indicators

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus left'
    alt-j = 'focus down'
    alt-k = 'focus up'
    alt-l = 'focus right'
    
    # Focus monitor navigation
    cmd-alt-h = 'focus-monitor left'
    cmd-alt-l = 'focus-monitor right'
    cmd-alt-j = 'focus-monitor down'
    cmd-alt-k = 'focus-monitor up'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-minus = 'resize smart -50'
    alt-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
    alt-b = 'workspace B'
    alt-c = 'workspace C'
    alt-d = 'workspace D'
    alt-e = 'workspace E'
    alt-f = 'workspace F'
    alt-g = 'workspace G'
    alt-i = 'workspace I'
    alt-m = 'workspace M'
    alt-n = 'workspace N'
    alt-o = 'workspace O'
    alt-p = 'workspace P'
    alt-q = 'workspace Q'
    alt-r = 'workspace R'
    alt-s = 'workspace S'
    alt-t = 'workspace T'
    alt-u = 'workspace U'
    alt-v = 'workspace V'
    alt-w = 'workspace W'
    alt-x = 'workspace X'
    alt-y = 'workspace Y'
    alt-z = 'workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9'
    alt-shift-a = 'move-node-to-workspace A'
    alt-shift-b = 'move-node-to-workspace B'
    alt-shift-c = 'move-node-to-workspace C'
    alt-shift-d = 'move-node-to-workspace D'
    alt-shift-e = 'move-node-to-workspace E'
    alt-shift-f = 'move-node-to-workspace F'
    alt-shift-g = 'move-node-to-workspace G'
    alt-shift-i = 'move-node-to-workspace I'
    alt-shift-m = 'move-node-to-workspace M'
    alt-shift-n = 'move-node-to-workspace N'
    alt-shift-o = 'move-node-to-workspace O'
    alt-shift-p = 'move-node-to-workspace P'
    alt-shift-q = 'move-node-to-workspace Q'
    alt-shift-r = 'move-node-to-workspace R'
    alt-shift-s = 'move-node-to-workspace S'
    alt-shift-t = 'move-node-to-workspace T'
    alt-shift-u = 'move-node-to-workspace U'
    alt-shift-v = 'move-node-to-workspace V'
    alt-shift-w = 'move-node-to-workspace W'
    alt-shift-x = 'move-node-to-workspace X'
    alt-shift-y = 'move-node-to-workspace Y'
    alt-shift-z = 'move-node-to-workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # Additional window management shortcuts
    alt-shift-enter = 'fullscreen'                    # Toggle fullscreen
    alt-shift-space = 'layout floating tiling'       # Toggle floating/tiling
    alt-shift-equal = 'balance-sizes'                 # Balance window sizes
    alt-period = 'layout tiles accordion'            # Toggle layout mode
    alt-shift-backslash = 'flatten-workspace-tree'   # Reset layout
    
    # Quick actions
    cmd-ctrl-alt-shift-q = 'reload-config'           # Reload AeroSpace config
    cmd-ctrl-alt-shift-c = 'move-mouse window-lazy-center'  # Center current window
    
    # Emergency reset (panic button)
    cmd-ctrl-alt-shift-x = 'flatten-workspace-tree'  # Emergency layout reset

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'
    
    # Enhanced resize mode - more granular control
    cmd-ctrl-alt-shift-r = 'mode resize'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']
    
    # Enhanced window management
    c = ['move-mouse window-lazy-center', 'mode main']  # Center floating window
    b = ['balance-sizes', 'mode main']  # Balance all window sizes
    m = ['fullscreen', 'mode main']  # Maximize/fullscreen current window
    
    # Layout presets
    1 = ['layout tiles', 'mode main']  # Tiles layout
    2 = ['layout accordion', 'mode main']  # Accordion layout
    3 = ['layout floating', 'mode main']  # Floating layout
    
    # Workspace operations
    w = ['close-all-windows-but-current', 'mode main']  # Close all but current
    q = ['flatten-workspace-tree', 'mode main']  # Reset workspace layout

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    # Join operations (merge splits)
    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']

# 'resize' binding mode for enhanced window resizing
[mode.resize.binding]
    esc = 'mode main'
    enter = 'mode main'
    
    # Granular resizing with different step sizes
    h = 'resize width -50'
    j = 'resize height +50'
    k = 'resize height -50'
    l = 'resize width +50'
    
    # Fine-grained resizing
    shift-h = 'resize width -10'
    shift-j = 'resize height +10'
    shift-k = 'resize height -10'
    shift-l = 'resize width +10'
    
    # Preset ratios
    1 = ['resize smart +0', 'mode main']  # Reset to balanced
    2 = ['resize smart -200', 'mode main']  # Smaller
    3 = ['resize smart +200', 'mode main']  # Larger
    
    # Quick resize presets
    alt-equal = ['balance-sizes', 'mode main']  # Balance all windows
    alt-minus = ['resize smart -100', 'mode main']
    alt-shift-equal = ['resize smart +100', 'mode main']
